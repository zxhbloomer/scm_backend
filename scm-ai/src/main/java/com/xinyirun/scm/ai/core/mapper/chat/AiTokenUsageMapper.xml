<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinyirun.scm.ai.core.mapper.chat.AiTokenUsageMapper">

    <resultMap id="BaseResultMap" type="com.xinyirun.scm.ai.bean.domain.AiTokenUsage">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="conversation_id" jdbcType="VARCHAR" property="conversationId" />
        <result column="model_source_id" jdbcType="VARCHAR" property="modelSourceId" />
        <result column="user_id" jdbcType="VARCHAR" property="userId" />
        <result column="tenant" jdbcType="VARCHAR" property="tenant" />
        <result column="ai_provider" jdbcType="VARCHAR" property="aiProvider" />
        <result column="ai_model_type" jdbcType="VARCHAR" property="aiModelType" />
        <result column="prompt_tokens" jdbcType="BIGINT" property="promptTokens" />
        <result column="completion_tokens" jdbcType="BIGINT" property="completionTokens" />
        <result column="total_tokens" jdbcType="BIGINT" property="totalTokens" />
        <result column="token_unit_price" jdbcType="DECIMAL" property="tokenUnitPrice" />
        <result column="cost" jdbcType="DECIMAL" property="cost" />
        <result column="success" jdbcType="TINYINT" property="success" />
        <result column="response_time" jdbcType="BIGINT" property="responseTime" />
        <result column="create_time" jdbcType="BIGINT" property="createTime" />
        <result column="ai_config_id" jdbcType="VARCHAR" property="aiConfigId" />
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id, conversation_id, model_source_id, user_id, tenant, ai_provider, ai_model_type,
        prompt_tokens, completion_tokens, total_tokens, token_unit_price, cost,
        success, response_time, create_time, ai_config_id
    </sql>

    <!-- 根据用户ID和时间范围查询Token使用记录 -->
    <select id="selectByUserIdAndTimeRange" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM ai_token_usage
        WHERE user_id = #{userId,jdbcType=VARCHAR}
        <if test="tenant != null">
            AND tenant = #{tenant,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            AND create_time &gt;= #{startTime,jdbcType=BIGINT}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime,jdbcType=BIGINT}
        </if>
        ORDER BY create_time DESC
        <if test="limit != null">
            LIMIT #{limit,jdbcType=INTEGER}
        </if>
    </select>

    <!-- 根据会话ID查询Token使用记录 -->
    <select id="selectByConversationId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM ai_token_usage
        WHERE conversation_id = #{conversationId,jdbcType=VARCHAR}
        ORDER BY create_time DESC
    </select>

    <!-- 查询用户Token使用汇总 -->
    <select id="selectUserTokenSummary" resultType="map">
        SELECT
            user_id,
            tenant,
            COUNT(*) as usage_count,
            SUM(CASE WHEN success = 1 THEN 1 ELSE 0 END) as success_count,
            SUM(prompt_tokens + completion_tokens) as total_tokens,
            SUM(cost) as total_cost,
            AVG(response_time) as avg_response_time
        FROM ai_token_usage
        WHERE user_id = #{userId,jdbcType=VARCHAR}
        <if test="tenant != null">
            AND tenant = #{tenant,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            AND create_time &gt;= #{startTime,jdbcType=BIGINT}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime,jdbcType=BIGINT}
        </if>
        GROUP BY user_id, tenant
    </select>

    <!-- 查询模型使用统计 -->
    <select id="selectModelUsageStats" resultType="map">
        SELECT
            ai_provider,
            ai_model_type,
            COUNT(*) as usage_count,
            SUM(prompt_tokens + completion_tokens) as total_tokens,
            SUM(cost) as total_cost,
            AVG(response_time) as avg_response_time
        FROM ai_token_usage
        WHERE 1=1
        <if test="startTime != null">
            AND create_time &gt;= #{startTime,jdbcType=BIGINT}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime,jdbcType=BIGINT}
        </if>
        <if test="tenant != null">
            AND tenant = #{tenant,jdbcType=VARCHAR}
        </if>
        GROUP BY ai_provider, ai_model_type
        ORDER BY total_tokens DESC
    </select>

    <!-- 查询最近的Token使用记录 -->
    <select id="selectRecentUsage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM ai_token_usage
        WHERE 1=1
        <if test="tenant != null">
            AND tenant = #{tenant,jdbcType=VARCHAR}
        </if>
        ORDER BY create_time DESC
        LIMIT #{limit,jdbcType=INTEGER}
    </select>

    <!-- 批量查询超过响应时间阈值的记录 -->
    <select id="selectSlowRequests" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM ai_token_usage
        WHERE response_time &gt; #{responseTimeThreshold,jdbcType=BIGINT}
        <if test="tenant != null">
            AND tenant = #{tenant,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            AND create_time &gt;= #{startTime,jdbcType=BIGINT}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime,jdbcType=BIGINT}
        </if>
        ORDER BY response_time DESC
        LIMIT #{limit,jdbcType=INTEGER}
    </select>

    <!-- 查询错误记录 -->
    <select id="selectErrorRecords" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM ai_token_usage
        WHERE success = 0
        <if test="tenant != null">
            AND tenant = #{tenant,jdbcType=VARCHAR}
        </if>
        <if test="startTime != null">
            AND create_time &gt;= #{startTime,jdbcType=BIGINT}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime,jdbcType=BIGINT}
        </if>
        ORDER BY create_time DESC
        LIMIT #{limit,jdbcType=INTEGER}
    </select>

    <!-- 标准MyBatis生成的方法 -->
    <select id="selectByExample" parameterType="com.xinyirun.scm.ai.bean.domain.AiTokenUsageExample" resultMap="BaseResultMap">
        SELECT
        <if test="distinct">distinct</if>
        <include refid="Base_Column_List" />
        FROM ai_token_usage
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            ORDER BY ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM ai_token_usage
        WHERE id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        DELETE FROM ai_token_usage
        WHERE id = #{id,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteByExample" parameterType="com.xinyirun.scm.ai.bean.domain.AiTokenUsageExample">
        DELETE FROM ai_token_usage
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.xinyirun.scm.ai.bean.domain.AiTokenUsage">
        INSERT INTO ai_token_usage (id, conversation_id, model_source_id, user_id, tenant,
            ai_provider, ai_model_type, prompt_tokens, completion_tokens,
            token_unit_price, cost, success, response_time, create_time)
        VALUES (#{id,jdbcType=VARCHAR}, #{conversationId,jdbcType=VARCHAR}, #{modelSourceId,jdbcType=VARCHAR},
            #{userId,jdbcType=VARCHAR}, #{tenant,jdbcType=VARCHAR}, #{aiProvider,jdbcType=VARCHAR},
            #{aiModelType,jdbcType=VARCHAR}, #{promptTokens,jdbcType=BIGINT}, #{completionTokens,jdbcType=BIGINT},
            #{tokenUnitPrice,jdbcType=DECIMAL}, #{cost,jdbcType=DECIMAL},
            #{success,jdbcType=TINYINT}, #{responseTime,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT})
    </insert>

    <insert id="insertSelective" parameterType="com.xinyirun.scm.ai.bean.domain.AiTokenUsage">
        INSERT INTO ai_token_usage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="conversationId != null">conversation_id,</if>
            <if test="modelSourceId != null">model_source_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="tenant != null">tenant,</if>
            <if test="aiProvider != null">ai_provider,</if>
            <if test="aiModelType != null">ai_model_type,</if>
            <if test="promptTokens != null">prompt_tokens,</if>
            <if test="completionTokens != null">completion_tokens,</if>
            <if test="tokenUnitPrice != null">token_unit_price,</if>
            <if test="cost != null">cost,</if>
            <if test="success != null">success,</if>
            <if test="responseTime != null">response_time,</if>
            <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=VARCHAR},</if>
            <if test="conversationId != null">#{conversationId,jdbcType=VARCHAR},</if>
            <if test="modelSourceId != null">#{modelSourceId,jdbcType=VARCHAR},</if>
            <if test="userId != null">#{userId,jdbcType=VARCHAR},</if>
            <if test="tenant != null">#{tenant,jdbcType=VARCHAR},</if>
            <if test="aiProvider != null">#{aiProvider,jdbcType=VARCHAR},</if>
            <if test="aiModelType != null">#{aiModelType,jdbcType=VARCHAR},</if>
            <if test="promptTokens != null">#{promptTokens,jdbcType=BIGINT},</if>
            <if test="completionTokens != null">#{completionTokens,jdbcType=BIGINT},</if>
            <if test="tokenUnitPrice != null">#{tokenUnitPrice,jdbcType=DECIMAL},</if>
            <if test="cost != null">#{cost,jdbcType=DECIMAL},</if>
            <if test="success != null">#{success,jdbcType=TINYINT},</if>
            <if test="responseTime != null">#{responseTime,jdbcType=BIGINT},</if>
            <if test="createTime != null">#{createTime,jdbcType=BIGINT},</if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.xinyirun.scm.ai.bean.domain.AiTokenUsageExample" resultType="java.lang.Long">
        SELECT COUNT(*) FROM ai_token_usage
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        UPDATE ai_token_usage
        <set>
            <if test="record.id != null">id = #{record.id,jdbcType=VARCHAR},</if>
            <if test="record.conversationId != null">conversation_id = #{record.conversationId,jdbcType=VARCHAR},</if>
            <if test="record.modelSourceId != null">model_source_id = #{record.modelSourceId,jdbcType=VARCHAR},</if>
            <if test="record.userId != null">user_id = #{record.userId,jdbcType=VARCHAR},</if>
            <if test="record.tenant != null">tenant = #{record.tenant,jdbcType=VARCHAR},</if>
            <if test="record.aiProvider != null">ai_provider = #{record.aiProvider,jdbcType=VARCHAR},</if>
            <if test="record.aiModelType != null">ai_model_type = #{record.aiModelType,jdbcType=VARCHAR},</if>
            <if test="record.promptTokens != null">prompt_tokens = #{record.promptTokens,jdbcType=BIGINT},</if>
            <if test="record.completionTokens != null">completion_tokens = #{record.completionTokens,jdbcType=BIGINT},</if>
            <if test="record.tokenUnitPrice != null">token_unit_price = #{record.tokenUnitPrice,jdbcType=DECIMAL},</if>
            <if test="record.cost != null">cost = #{record.cost,jdbcType=DECIMAL},</if>
            <if test="record.success != null">success = #{record.success,jdbcType=TINYINT},</if>
            <if test="record.responseTime != null">response_time = #{record.responseTime,jdbcType=BIGINT},</if>
            <if test="record.createTime != null">create_time = #{record.createTime,jdbcType=BIGINT},</if>
        </set>
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map">
        UPDATE ai_token_usage
        SET id = #{record.id,jdbcType=VARCHAR},
        conversation_id = #{record.conversationId,jdbcType=VARCHAR},
        model_source_id = #{record.modelSourceId,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=VARCHAR},
        tenant = #{record.tenant,jdbcType=VARCHAR},
        ai_provider = #{record.aiProvider,jdbcType=VARCHAR},
        ai_model_type = #{record.aiModelType,jdbcType=VARCHAR},
        prompt_tokens = #{record.promptTokens,jdbcType=BIGINT},
        completion_tokens = #{record.completionTokens,jdbcType=BIGINT},
        token_unit_price = #{record.tokenUnitPrice,jdbcType=DECIMAL},
        cost = #{record.cost,jdbcType=DECIMAL},
        success = #{record.success,jdbcType=TINYINT},
        response_time = #{record.responseTime,jdbcType=BIGINT},
        create_time = #{record.createTime,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.xinyirun.scm.ai.bean.domain.AiTokenUsage">
        UPDATE ai_token_usage
        <set>
            <if test="conversationId != null">conversation_id = #{conversationId,jdbcType=VARCHAR},</if>
            <if test="modelSourceId != null">model_source_id = #{modelSourceId,jdbcType=VARCHAR},</if>
            <if test="userId != null">user_id = #{userId,jdbcType=VARCHAR},</if>
            <if test="tenant != null">tenant = #{tenant,jdbcType=VARCHAR},</if>
            <if test="aiProvider != null">ai_provider = #{aiProvider,jdbcType=VARCHAR},</if>
            <if test="aiModelType != null">ai_model_type = #{aiModelType,jdbcType=VARCHAR},</if>
            <if test="promptTokens != null">prompt_tokens = #{promptTokens,jdbcType=BIGINT},</if>
            <if test="completionTokens != null">completion_tokens = #{completionTokens,jdbcType=BIGINT},</if>
            <if test="tokenUnitPrice != null">token_unit_price = #{tokenUnitPrice,jdbcType=DECIMAL},</if>
            <if test="cost != null">cost = #{cost,jdbcType=DECIMAL},</if>
            <if test="success != null">success = #{success,jdbcType=TINYINT},</if>
            <if test="responseTime != null">response_time = #{responseTime,jdbcType=BIGINT},</if>
            <if test="createTime != null">create_time = #{createTime,jdbcType=BIGINT},</if>
        </set>
        WHERE id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.xinyirun.scm.ai.bean.domain.AiTokenUsage">
        UPDATE ai_token_usage
        SET conversation_id = #{conversationId,jdbcType=VARCHAR},
        model_source_id = #{modelSourceId,jdbcType=VARCHAR},
        user_id = #{userId,jdbcType=VARCHAR},
        tenant = #{tenant,jdbcType=VARCHAR},
        ai_provider = #{aiProvider,jdbcType=VARCHAR},
        ai_model_type = #{aiModelType,jdbcType=VARCHAR},
        prompt_tokens = #{promptTokens,jdbcType=BIGINT},
        completion_tokens = #{completionTokens,jdbcType=BIGINT},
        token_unit_price = #{tokenUnitPrice,jdbcType=DECIMAL},
        cost = #{cost,jdbcType=DECIMAL},
        success = #{success,jdbcType=TINYINT},
        response_time = #{responseTime,jdbcType=BIGINT},
        create_time = #{createTime,jdbcType=BIGINT}
        WHERE id = #{id,jdbcType=VARCHAR}
    </update>

</mapper>